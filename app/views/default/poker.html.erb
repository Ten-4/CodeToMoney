<meta charset="utf-8">
<title>CodeCasino</title>
<img src="assets/junction_5_3.jpg" width=100% height=100% style="">
<img id="table" style="position:absolute;top:200px;left:300px;" width=600 src="assets/poyta3.png">
<p id="start" style="color:white;font-size:40;position:absolute;left:100px;top:100px;visibility:hidden">Waiting for players...</p>
<img id="c1" style="position:absolute;top:150px;left:320px" src="assets/tietokone_pois_paalta2.png" width="150">
<img id="c2" style="position:absolute;top:150px;left:520px" src="assets/tietokone_pois_paalta2.png" width="150">
<img id="c3" style="position:absolute;top:150px;left:720px" src="assets/tietokone_pois_paalta2.png" width="150">
<img id="c4" style="position:absolute;top:370px;left:320px" src="assets/tietokone_pois_paalta2.png" width="150">
<img id="c5" style="position:absolute;top:370px;left:520px" src="assets/tietokone_pois_paalta2.png" width="150">
<img id="c6" style="position:absolute;top:370px;left:720px" src="assets/tietokone_pois_paalta2.png" width="150">
<span id="s1" style="position:absolute;top:150px;left:360px;color:white">sisu<br></span>
<span id="s2" style="position:absolute;top:150px;left:560px;color:white">Coolness<br></span>
<span id="s3" style="position:absolute;top:150px;left:760px;color:white">mirchiss<br></span>
<span id="s4" style="position:absolute;top:460px;left:360px;color:white">sisu<br></span>
<span id="s5" style="position:absolute;top:460px;left:560px;color:white">sisu<br></span>
<span id="s6" style="position:absolute;top:460px;left:760px;color:white">sisu<br></span>
<img id="c1" style="position:absolute;top:250px;left:360px" src="assets/valaistu_koodi.png" width="30">
<img id="c2" style="position:absolute;top:250px;left:560px" src="assets/valaistu_koodi.png" width="30">
<img id="c3" style="position:absolute;top:250px;left:760px" src="assets/valaistu_koodi.png" width="30">
<img id="c4" style="position:absolute;top:350px;left:360px" src="assets/valaistu_koodi.png" width="30">
<img id="c5" style="position:absolute;top:350px;left:560px" src="assets/valaistu_koodi.png" width="30">
<img id="c6" style="position:absolute;top:350px;left:760px" src="assets/valaistu_koodi.png" width="30">
<div id="task" style="position:absolute;top:100px;left:350px;width:500px;border-style:solid;border-color:white;border-style:solid;background:#555555;color:white;padding:5px 5px 5px 5px;visibility:hidden;font-size:18px">lol1</div>
<div id="time" style="position:absolute;top:50px;left:810px;width:500px;border-style:solid;border-color:white;border-style:solid;background:#555555;color:white;padding:5px 5px 5px 5px;visibility:visible;font-size:18px">time</div>
<div id="results" style="position:absolute;top:250px;left:350px;width:500px;border-style:solid;border-color:white;border-style:solid;background:#555555;color:white;padding:5px 5px 5px 5px;visibility:hidden;font-size:18px">lol1</div>
<div id="bet" style="position:absolute;top:500px;left:350px;width:500px;border-style:solid;border-color:white;border-style:solid;background:#555555;color:white;padding:5px 5px 5px 5px;visibility:hidden;font-size:18px">
  Select bet
  <br>
  <input style="color:black" id="newBet" value="">
  <p><button style="color:black" onclick="makeBet()">Bet</button>
  <button style="color:black" onclick="fold()">Fold</button></p>
</div>
<div id="call" style="position:absolute;top:500px;left:350px;width:500px;border-style:solid;border-color:white;border-style:solid;background:#555555;color:white;padding:5px 5px 5px 5px;visibility:hidden;font-size:18px">
  Call/Fold
  <br>
  <p>Raise: <div id="raiseValue">0</div></p>
  <div id="callfold">
    <p><button style="color:black" onclick="makeCall()">Call</button>
    <button style="color:black" onclick="fold()">Fold</button></p>
  <div>
</div>
<script>
var PHASE_START = "WAITING";
var PHASE_CODE = "CODING";
var PHASE_BET = "BETTING";
var PHASE_CALL = "CALLING";
var PHASE_RESULTS = "RESULTS";

var TIME_CODE = 60;
var TIME_BET = 15;
var TIME_CALL = 15;

var TIME_ROUND = TIME_CODE + TIME_BET + TIME_CALL;

var phase = PHASE_START;
var task = 0;
var phaseTime;
var maxBet = 100;
var ownBet = 0;
var user = <%= current_user.id %>;

function send() {
    submitCode();
}

function size() {
    var x = document.getElementById("code");
    print("size", x.value.length);
}

var userCount = 6;
var players = [];
var playerName = [];
var playerBet = [];
var submitOk = [];
var submitDone = false;

function showPlayers() {
    for (var i = 1; i <= 6; i++) {
        var x = document.getElementById("c" + i);
        if (players[i] == 1) x.src = "assets/tietokone_paalla2.png";
        else x.src = "assets/tietokone_pois_paalta2.png";
        var x = document.getElementById("s" + i);
        if (players[i] == 1) x.innerHTML = playerName[i];
        else x.innerHTML = "--";
    }
}
function showResults() {
  res = "";
  res += "Results<br/><table border=1><tr><td>User</td><td>Bet</td><td>Code OK</td></tr>";
  console.log("uc: "+userCount);
  var sum = 0;
  var winner = "";
  var count = 0;
  for(var i=1; i<=userCount; ++i) {
    res += "<tr><td>";
    res += playerName[i];
    res += "</td><td>";
    res += playerBet[i];
    if (playerBet[i] > 0) sum += playerBet[i];
    res += "</td><td>";
    res += submitOk[i];
    if (submitOk[i]) {
      count++;
      if (count == 1) winner = playerName[i];
      else winner += ", " + playerName[i];
    }
    res += "</td></tr>";
  }
  res += "</table>";
  console.log(res);
  print("results", res);
  if (count == 0) alert("No winners =/");
  if (count == 1) alert("Winner: " + winner + "\nPrize: " + sum + "$")
  if (count > 1) alert("Winners: " + winner + "\nPrize: " + parseInt(sum/count) + "$")
}

function getTask(x) {
    task = x["id"];
    var msg = x["description"];
    //var tmp = x["base_code"];
    var tmp = x["base_code"];
//    phaseTime = 100;
    /*var msg = "Given a positive integer <i>n</i>, calculate the number of prime numbers between 2 and <i>n</i>.";
    msg += "<hr>Function template:<pre>def prime(n):\n    ...</pre>";
    msg += "Return value: number of primes between 2 and <i>n</i>";
    var tmp = "def prime(n):\n";
    phaseTime = 100;*/
    msg = "<p>" + msg + "</p>";
    msg += "<hr>";
    if (submitDone) {
      msg += "<p>Submitted</p>"
    } else {
      msg += "<table><tr valign=top><td><textarea style=\"color:black;font-family:monospace;font-size:12px;\"id=\"code\" rows=8 cols=40 onkeyup=\"size()\">" + tmp + "</textarea>";
      msg += "</td>";
//      msg += "<td>";
//      msg += "<font color=white>Time left: <span id=\"time\">" + phaseTime + "</span></font><br>";
 //     msg += "<!--<font color=\"white\">Code length: <span id=\"size\">" + tmp.length + "</span></font>-->";
//      msg += "</td>
      msg += "</tr></table>";
      msg += "<br><button style=\"color:black\"onclick=\"send()\">Send code</button>";
    }
    print("task", msg);
}

function ajaxTask() {
  $.ajax({
    url: "/gettask?round_id=" + ownRound,
    type: "GET",
    dataType: "json",
    success: function (data) {
      getTask(data);
    }
  });
}

function show(id) {
  var x = document.getElementById(id);
  x.style.visibility = "visible";
}

function hide(id) {
  var x = document.getElementById(id);
  x.style.visibility = "hidden";
}

function print(id, text) {
  var x = document.getElementById(id);
  x.innerHTML = text;
}

function makeBet() {
  var newBet = parseInt(document.getElementById("newBet").value);
  if (newBet < maxBet) {
    newBet = maxBet;
  }
  maxBet = newBet;
  ownBet = newBet;
  submitBet(ownBet);
  hide("bet");
}

function makeCall() {
  makeBet();
  hide("callfold");
}

function fold() {
  ownBet = -1;
  submitBet(ownBet);
  hide("bet");
  hide("callfold");
}

function createBet() {
  document.getElementById("newBet").value = maxBet;
  /*
  var bet = "";
  bet += "Select bet:<br>";
  bet += "<input style=\"font-color:black color:black\" id=\"newBet\" value=\"" + maxBet + "\">";
  bet += "<p><button style=\"color:black\" onclick=\"bet()\">Bet</button>";
  bet += "<button onclick=\"fold()\">Fold</button></p>";
  print("bet", bet);
  */
}
function createCall() {
  document.getElementById("raiseValue").innerHTML = maxBet;
  show("callfold");
}

var prevPhase = null;
function drawPhase() {
  if (phase == PHASE_START) {
    return "start";
  } else if (phase == PHASE_CODE) {
    if (phase != prevPhase) {
      ajaxTask();
    }
    return "task";
  } else if (phase == PHASE_BET) {
    if (ownBet != 0) {
      return "";
    }
    if (phase != prevPhase) {
      createBet();
    }
    return "bet";
  } else if (phase == PHASE_CALL) {
    if (phase != prevPhase) {
      createCall();
    }
    return "call";
  } else if (phase == PHASE_RESULTS) {
    showResults();
    return "results";
  }
}

var PHASE_COMPONENTS = ["start", "task", "bet", "call", "results"];

function change() {
  ajaxRounds();
  ajaxPlayers();
  showPlayers();
  print("time", Math.round(phaseTime) + " s left in phase " + phase);
  if (ownRound==0) return;

  var visible = drawPhase();
  if (phase != prevPhase) {
    for(var i=0; i<PHASE_COMPONENTS.length; ++i) {
      var c = PHASE_COMPONENTS[i];
      if (c == visible) {
        console.log("showing " + c);
        show(c);
      } else {
        hide(c);
        if (c=="call") {
          hide("callfold");
        }
      }
    }
    }
  prevPhase = phase;
}

var ownRound = 0;

function choosePhase(time) {
  if (time < 0) {
    submitDone = false;
    print("task", "")
    ownBet = 0;
    return [PHASE_START, -time];
  }
  if (time < TIME_CODE) return [PHASE_CODE, TIME_CODE - time];
  if (time < TIME_CODE + TIME_BET) return [PHASE_BET, TIME_CODE + TIME_BET - time];
  if (time < TIME_CODE + TIME_BET + TIME_CALL) return [PHASE_CALL, TIME_CODE + TIME_BET + TIME_CALL - time];
  return [PHASE_RESULTS, 0];
}

function setPhase(y) {
  var time = y["time"];
  var startTime = y["start_time"];
  ownRound = y["round_id"];
  arr = choosePhase(time - startTime);
  phase = arr[0];
  if (phase != prevPhase) {
    console.log("Entering phase " + phase);
  }
  phaseTime = arr[1];
}

function getRounds(x) {
  var closest = null;
  var previous = null;
  for (var i = 0; i < x["rounds"].length; i++) {
    var y = x["rounds"][i];
    var time = y["time"];
    var startTime = y["start_time"];

    var endTime = startTime + TIME_ROUND;
    if (time > endTime) {
      if (y["joined"]) {
        if (!previous || time > x["rounds"][previous]["time"]) {
          previous = i;
        }
      }
      continue;
    }
    if (y["joined"]) {
      setPhase(y);
      return;
    }
    if (time < startTime) {
      if (!closest || time < x["rounds"][closest]["time"]) {
        closest = i;
      }
      continue;
    }
  }
  if (closest != null) {
    var y = x["rounds"][closest];
    setPhase(y);
    joinRound();
  } else if (previous != null) {
    var y = x["rounds"][previous];
    setPhase(y);
  } else {
    ownRound = 0;
    phase = 0;
  }
}

function ajaxRounds() {
  $.ajax({
    url: "/rounds.json",
    type: "GET",
    dataType: "json",
    success: function (data) {
      getRounds(data);
    }
  });
}

var playerList;

function joinRound() {
  console.log('Joining round ' + ownRound + ' starting in ' + phaseTime)
  $.ajax({
    url: "/round_players.json",
    type: "POST",
    dataType: "json",
    data: {round_player: {user_id: user, round_id: ownRound, bet: 0}},
    success: function (data) {
      getPlayers(data);
    }
  });
}

function getPlayers(x) {
  userCount = x["users"].length;
  resetPlayers();
  maxBet = 0;
  for (var i = 0; i < userCount; i++) {
    players[i+1] = 1;
    playerName[i+1] = x["users"][i]["username"];

    round = x["round_players"][i];
    playerBet[i+1] = round["bet"];
    maxBet = Math.max(maxBet, playerBet[i+1]);
    var hasSubmit = round["submission_id"] > 0;
    submitOk[i+1] = hasSubmit && round["submission"]!=null && round["submission"]["passed"];
    if (round["user_id"] == user) {
      submitDone = hasSubmit;
      ownBet = round["bet"];
    }
  }
  maxBet = Math.max(maxBet, 100);
}
function resetPlayers() {
  for (var i = 0; i < 6; i++) {
    players[i+1] = 0;
    playerName[i+1] = "";
  }
}

function submitCode() {
  submitDone = true;
  $.ajax({
    url: "/submissions",
    type: "POST",
    dataType: "json",
    data: {submission: {task_id: task, user_id: user, round_id: ownRound, code: document.getElementById("code").value}},
    success: function (data) {
//      getPlayers(data);
    }
  });
  hide("task");
}
function submitBet(bet) {
  console.log("Submitting bet " + bet);
  $.ajax({
    url: "/round_players/updatebet",
    type: "POST",
    dataType: "json",
    data: {submission: {user_id: user, round_id: ownRound, bet: bet}},
    success: function (data) {
//      getPlayers(data);
    }
  });
  hide("bet");
}

function ajaxPlayers() {
  if (ownRound == 0) {
    resetPlayers();
    return
  }
  $.ajax({
    url: "/rounds/" + ownRound + ".json",
    type: "GET",
    dataType: "json",
    success: function (data) {
      getPlayers(data);
    }
  });
}

for (var i = 1; i <= 6; i++) players[i] = 0;
ajaxRounds();
//move("table", 0, 0);
setInterval("change()", 1000);
showPlayers();
</script>
